#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

int C, N;
multiset<int> dak;
vector<pair<int, int>> so;

int main() {
    scanf("%d %d", &C, &N);
    for(int i = 0 ; i < C; i ++) {
        int x; scanf("%d", &x);
        dak.insert(x);
    }
    for(int i = 0; i < N; i ++) {
        int x, y; scanf("%d %d", &x, &y);
        so.push_back(make_pair(y, x));
    }
    sort(so.begin(), so.end());
    int ans = 0;
    for(int i = 0; i < N; i ++) {
        auto get = dak.lower_bound(so[i].second);
        if(*get <= so[i].first && get != dak.end()) {
            ans ++;
            dak.erase(get);
        }
    }
    printf("%d", ans);
}
