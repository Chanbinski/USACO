#include <cstdio>
#include <algorithm>
#include <iostream>
using namespace std;

int alp[3][3];
int cnt_alone, cnt_team;
int alp1[100];
int alp2[100][100];

bool check(int c) {
    if(alp1[c] == 1) return false;
    else { alp1[c] = 1; return true; }
}

void check2(int a, int b, int c) {
    if(a == b) {
        if(alp2[a][c] == 0) {
            cnt_team++;
            alp2[a][c] = 1;
            alp2[c][a] = 1;
        }
    }
    else if(a == c) {
        if(alp2[a][b] == 0) {
            cnt_team++;
            alp2[a][b] = 1;
            alp2[b][a] = 1;
        }
    }
    else {
        if(alp2[b][a] == 0) {
            cnt_team++;
            alp2[b][a] = 1;
            alp2[a][b] = 1;
        }
    }
}

int main() {
    for(int i = 0; i < 3; i ++) {
        string str;
        cin >> str;
        for(int j = 0; j < 3; j ++) {
            alp[i][j] = str[j];
        }
    }
    //Columns
    for(int i = 0; i < 3; i ++) {
        if(alp[i][0] == alp[i][1] && alp[i][1] == alp[i][2]) {
            if(check(alp[i][0])) cnt_alone ++;
        }
        else if(alp[i][0] == alp[i][1] || alp[i][1] == alp[i][2] || alp[i][0] == alp[i][2]) {
            check2(alp[i][0], alp[i][1], alp[i][2]);
        }
    }
    //Row
    for(int j = 0; j < 3; j ++) {
        if(alp[0][j] == alp[1][j] && alp[1][j] == alp[2][j]) {
            if(check(alp[0][j])) cnt_alone ++;
        }
        else if(alp[0][j] == alp[1][j] || alp[1][j] == alp[2][j] || alp[0][j] == alp[2][j]) {
            check2(alp[0][j], alp[1][j], alp[2][j]);
        }
    }
    //Diagonal
    if(alp[0][0] == alp[1][1] && alp[1][1] == alp[2][2]) {
        if(check(alp[0][0])) cnt_alone ++;
    }
    else if(alp[0][0] == alp[1][1] || alp[1][1] == alp[2][2] || alp[0][0] == alp[2][2]) {
        check2(alp[0][0], alp[1][1], alp[2][2]);
    }
    if(alp[2][0] == alp[1][1] && alp[1][1] == alp[0][2]) {
        if(check(alp[2][0])) cnt_alone ++;
    }
    else if(alp[2][0] == alp[1][1] || alp[1][1] == alp[0][2] || alp[2][0] == alp[0][2]) {
        check2(alp[2][0], alp[1][1], alp[0][2]);
    }
    
    printf("%d\n%d", cnt_alone, cnt_team);
}
